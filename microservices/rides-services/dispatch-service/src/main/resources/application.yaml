server.port: 8090

spring.cloud.stream:
#  function:
#    definition: process
#    bindings:
#      process-in-0:
#        destination: ride-requests
#      process-out-0:
#        destination: requests-out
  function:
    definition: join_ride_requests

#    process_ride_requests;process_drivers,join_ride_requests;



#spring.cloud.stream.bindings.process_ride_requests-in-0:
#  destination: ride-requests
#spring.cloud.stream.bindings.process_ride_requests-out-0:
#  destination: ride-requests-out
#
#spring.cloud.stream.bindings.process_drivers-in-0:
#  destination: drivers
#spring.cloud.stream.bindings.process_drivers-out-0:
#  destination: drivers-out
#

spring.cloud.stream.bindings.join_ride_requests-in-0:
  destination: drivers
spring.cloud.stream.bindings.join_ride_requests-in-1:
  destination: ride-requests
#spring.cloud.stream.bindings.join_ride_requests-out-0:
#  destination: ride-requests-out



spring.cloud.stream.kafka.streams.binder:
  brokers: localhost:9092
  configuration:
    schema.registry.url: http://localhost:8081
    commit.interval.ms: 1000


spring.cloud.stream.kafka.streams.binder.configuration:
  default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
  default.value.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde


#  kafka:
#    streams:
#      binder:
#        applicationId: hello-word-count-sample
#        configuration:
#          commit.interval.ms: 100
#          default:
#            key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
#            value.serde: org.apache.kafka.common.serialization.Serdes$StringSerde